//Given an array of positive integers. Write a function to find the
//maximum contiguous subarray that start and end with the same value
import java.util.HashMap;

class Go {
    public static void main(String[] data){
        Solution s = new Solution();
        System.out.println(s.solution(new int[] {1,3,6,1,6,6,9,9}));    //19
        System.out.println(s.solution(new int[] {5,1,4,3}));            //-1
        System.out.println(s.solution(new int[] {10,1,3,1,2,3}));       // 9
        System.out.println(s.solution(new int[] {1,2,3,3,2,1}));        //12
        System.out.println(s.solution(new int[] {1}));                  //-1
        System.out.println(s.solution(new int[] {}));                   //-1
    }
}

class Solution {
    public int solution(int[] a){
        HashMap<Integer, Integer> fist = new HashMap<>();
        HashMap<Integer, Integer> last = new HashMap<>();
        int sum = 0;
        for (int i = 0; i < a.length; i++) {
            sum += a[i];
            Integer value = fist.get(a[i]);
            if (value == null) {
                fist.put(a[i], sum);
            } else {
                last.put(a[i], sum);
            }
        }
        int maximum = 0;
        for (Integer key : fist.keySet()) {
            Integer start = fist.get(key);
            Integer finish = last.get(key);
            if (finish != null) {
                sum = finish - start + key;
                if (sum > maximum) {
                    maximum = sum;
                }
            }   
        }
        if (maximum == 0) {
            maximum = -1;
        }
        return maximum;
    }
}
